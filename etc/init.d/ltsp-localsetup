#! /bin/sh
### BEGIN INIT INFO
# Provides:          skeleton
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Example initscript
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.
### END INIT INFO

do_sync()
{
  if ! cd /mnt/images/; then 
    echo "error: disk not mounted"
    exit 1
  fi


  if test -z "$1"; then
    SERVER="http://172.16.42.10"
    PATH="ltsp-images"
    #SERVER=$(getltscfg IMAGE_SERVER)
    #PATH=$(getltscfg IMAGE_PATH)
    URL="$SERVER/$PATH"
  else
    URL="$1"
  fi

  if test -f version; then
    VERSION=$(/bin/cat version)
  else
    VERSION=0
    touch version
    echo "0" > version
  fi


  VERSION_neu="$(wget -O - ${URL}/version 2>/dev/null)"

  if test -z "$VERSION_neu"; then 
     echo "could not read new version:${VERSION_neu}:"
     exit 1
  fi
 

  if test "$VERSION"  = "$VERSION_neu"; then
    echo "nothing to do"
  else
    echo "copy $(printf "%06i.img" $VERSION) to $(printf "%06i.img" $VERSION_neu)..."
    cp $(printf "%06i.img" $VERSION) $(printf "%06i.img" $VERSION_neu) 
    echo "zsync..." 
    if zsync "${URL}/$(printf "%06i.img" $VERSION_neu).zsync"; then
      # sync meta info
      rm primary-image-*
      wget ${URL}/primary-image-$(printf "%06i" $VERSION_neu)
      rm version
      wget ${URL}/version
      echo "done"

      #remove old images
      echo "remove oldies"
      if test -f $(printf "%06i.img" $(( $VERSION -3 ))); then
        rm $(printf "%06i.img" $(( $VERSION -3 )))
      fi
      if test -f *.zs-old; then 
        rm *.zs-old 
      fi
      #change permissions
      chmod a+r /mnt/images/*.img

      echo "ok"
    fi
  fi
}

#
# Function that starts the daemon/service
#
do_start()
{
  # try to mount partition with images
  PARTS="sdc1 sdb1 sda1 vda1"
  CURRENT=""
  umount /mnt
  for P in $PARTS; do
      if ! test -z "$CURRENT"; then continue; fi
      echo -n "trying: /dev/$P ..."
      if mount /dev/$P /mnt/; then
        if test -d /mnt/images; then
           CURRENT=$P
           echo "ok"
        else
           umount /mnt/
           echo "no"
        fi
      fi
  done

  # exit if none found
  if test -z "$CURRENT"; then 
     echo "error: no disk"
     exit 1 
  fi
 
  #prepare local nbd
  if ! test -d /opt/ltsp/images/; then 
         mkdir -p /opt/ltsp/images/ 
  fi

  BOOT=$(cat /proc/cmdline|cut -d\  -f6|cut -d= -f2)     
  if test -f /opt/ltsp/images/i386.img; then 
         rm /opt/ltsp/images/i386.img
  fi
  ln -s /mnt/${BOOT} /opt/ltsp/images/i386.img

  # realy needed?
  service nbd-server restart


  # sync image in background
  nice $0 sync &

}

#
# Function that stops the daemon/service
#
do_stop()
{
   umount /mnt
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
 do_stop
 do_start
}


# main
main(){
  if ! cat /proc/cmdline | grep -q "loop"; then exit; fi

  case "$1" in
    sync)
        do_sync
        ;;
    start)
        do_start
	;;
    stop)
        do_stop
	;;
    restart|reload)
        do_reload
	;;
    *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|restart|reload|sync}" >&2
	exit 3
	;;
  esac
}

main
